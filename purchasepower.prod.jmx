<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.1.1 r1855137">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments">check_in	11/17/2019
check_out	11/20/2019</stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="host" elementType="Argument">
            <stringProp name="Argument.name">host</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="scheme" elementType="Argument">
            <stringProp name="Argument.name">scheme</stringProp>
            <stringProp name="Argument.value">https</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain"></stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol">https</stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">true</boolProp>
      </CookieManager>
      <hashTree/>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Dates.csv" enabled="true">
        <stringProp name="delimiter">,</stringProp>
        <stringProp name="fileEncoding"></stringProp>
        <stringProp name="filename">Dates.csv</stringProp>
        <boolProp name="ignoreFirstLine">false</boolProp>
        <boolProp name="quotedData">false</boolProp>
        <boolProp name="recycle">true</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
        <boolProp name="stopThread">false</boolProp>
        <stringProp name="variableNames">check_in,check_out</stringProp>
      </CSVDataSet>
      <hashTree/>
      <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="jsonIndex" enabled="true">
        <stringProp name="variableName">jsonIndex</stringProp>
        <stringProp name="outputFormat"></stringProp>
        <stringProp name="minimumValue">1</stringProp>
        <stringProp name="maximumValue">10</stringProp>
        <stringProp name="randomSeed"></stringProp>
        <boolProp name="perThread">false</boolProp>
      </RandomVariableConfig>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">2000</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1000</stringProp>
        <longProp name="ThreadGroup.start_time">1370726934000</longProp>
        <longProp name="ThreadGroup.end_time">1370726934000</longProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">1500</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.delayedStart">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="01-OpenApplication" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="243 /app/Home" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="jwt" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jwt</stringProp>
                  <stringProp name="Argument.value">eyJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJwcGMiLCJpYXQiOjE1NDE2NzQyMzksImp0aSI6IjVlODg3MDRiLWUyMDctNDViOS1hNGU4LTdjMjdiYzQzNGE1MyIsImNsaWVudElkIjoiMjMxNSIsImN1c3RvbWVySWQiOiJkYnJlZXMxQG1haWxpbmF0b3IuY29tIiwiZmlyc3ROYW1lIjoiU3Jpbml2YXMiLCJsYXN0TmFtZSI6Ik1hamlnYSIsImVtYWlsIjoiZGJyZWVzMUBtYWlsaW5hdG9yLmNvbSIsInNwZW5kaW5nTGltaXQiOiIxMDcwNS4wIiwidGVybSI6MTIsInBheUN5Y2xlc1BlclllYXIiOjI2LCJlbGlnaWJsZSI6dHJ1ZSwiY2xpZW50TG9nb1VybCI6Imh0dHBzOi8vaW1hZ2VzLnB1cmNoYXNpbmdwb3dlci5jb20vY2xpZW50cy9sb2dvcy9xbHNfbG9nby5qcGciLCJyZXR1cm5VcmwiOiJodHRwczovL3Byb2o2LnB1cmNoYXNpbmdwb3dlci5jb20vc3RvcmUvY2FydD9yZWNhbGN1bGF0ZT10cnVlJnJlc3RvcmVDYXJ0PXRydWUiLCJjYW5jZWxVcmwiOiJodHRwczovL3Byb2o2LnB1cmNoYXNpbmdwb3dlci5jb20vc3RvcmUiLCJrZWVwQWxpdmVVcmwiOiIifQ.US6Hxt-mYhMOfipmetA8Z5G3ffHKF0ICwgqN_SEq_X-8QfbcazTUTDLoq3YuTeoQoVZczJ3w8Pce_P7waULvgQ</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">www.purchasingpower.travel</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/app/Home</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:69.0) Gecko/20100101 Firefox/69.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="317 /app/Home?jwt=eyJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJwcGMiLCJpYXQiOjE1NDE2NzQyMzksImp0aSI6IjVlODg3MDRiLWUyMDctNDViOS1hNGU4LTdjMjdiYzQzNGE1MyIsImNsaWVudElkIjoiMjMxNSIsImN1c3RvbWVySWQiOiJkYnJlZXMxQG1haWxpbmF0b3IuY29tIiwiZmlyc3ROYW1lIjoiU3Jpbml2YXMiLCJsYXN0TmFtZSI6Ik1hamlnYSIsImVtYWlsIjoiZGJyZWVzMUBtYWlsaW5hdG9yLmNvbSIsInNwZW5kaW5nTGltaXQiOiIxMDcwNS4wIiwidGVybSI6MTIsInBheUN5Y2xlc1BlclllYXIiOjI2LCJlbGlnaWJsZSI6dHJ1ZSwiY2xpZW50TG9nb1VybCI6Imh0dHBzOi8vaW1hZ2VzLnB1cmNoYXNpbmdwb3dlci5jb20vY2xpZW50cy9sb2dvcy9xbHNfbG9nby5qcGciLCJyZXR1cm5VcmwiOiJodHRwczovL3Byb2o2LnB1cmNoYXNpbmdwb3dlci5jb20vc3RvcmUvY2FydD9yZWNhbGN1bGF0ZT10cnVlJnJlc3RvcmVDYXJ0PXRydWUiLCJjYW5jZWxVcmwiOiJodHRwczovL3Byb2o2LnB1cmNoYXNpbmdwb3dlci5jb20vc3RvcmUiLCJrZWVwQWxpdmVVcmwiOiIifQ.US6Hxt-mYhMOfipmetA8Z5G3ffHKF0ICwgqN_SEq_X-8QfbcazTUTDLoq3YuTeoQoVZczJ3w8Pce_P7waULvgQ" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">www.purchasingpower.travel</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/app/Home?jwt=eyJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJwcGMiLCJpYXQiOjE1NDE2NzQyMzksImp0aSI6IjVlODg3MDRiLWUyMDctNDViOS1hNGU4LTdjMjdiYzQzNGE1MyIsImNsaWVudElkIjoiMjMxNSIsImN1c3RvbWVySWQiOiJkYnJlZXMxQG1haWxpbmF0b3IuY29tIiwiZmlyc3ROYW1lIjoiU3Jpbml2YXMiLCJsYXN0TmFtZSI6Ik1hamlnYSIsImVtYWlsIjoiZGJyZWVzMUBtYWlsaW5hdG9yLmNvbSIsInNwZW5kaW5nTGltaXQiOiIxMDcwNS4wIiwidGVybSI6MTIsInBheUN5Y2xlc1BlclllYXIiOjI2LCJlbGlnaWJsZSI6dHJ1ZSwiY2xpZW50TG9nb1VybCI6Imh0dHBzOi8vaW1hZ2VzLnB1cmNoYXNpbmdwb3dlci5jb20vY2xpZW50cy9sb2dvcy9xbHNfbG9nby5qcGciLCJyZXR1cm5VcmwiOiJodHRwczovL3Byb2o2LnB1cmNoYXNpbmdwb3dlci5jb20vc3RvcmUvY2FydD9yZWNhbGN1bGF0ZT10cnVlJnJlc3RvcmVDYXJ0PXRydWUiLCJjYW5jZWxVcmwiOiJodHRwczovL3Byb2o2LnB1cmNoYXNpbmdwb3dlci5jb20vc3RvcmUiLCJrZWVwQWxpdmVVcmwiOiIifQ.US6Hxt-mYhMOfipmetA8Z5G3ffHKF0ICwgqN_SEq_X-8QfbcazTUTDLoq3YuTeoQoVZczJ3w8Pce_P7waULvgQ</stringProp>
            <stringProp name="HTTPSampler.method">HEAD</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://www.purchasingpower.travel/app/Home?jwt=eyJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJwcGMiLCJpYXQiOjE1NDE2NzQyMzksImp0aSI6IjVlODg3MDRiLWUyMDctNDViOS1hNGU4LTdjMjdiYzQzNGE1MyIsImNsaWVudElkIjoiMjMxNSIsImN1c3RvbWVySWQiOiJkYnJlZXMxQG1haWxpbmF0b3IuY29tIiwiZmlyc3ROYW1lIjoiU3Jpbml2YXMiLCJsYXN0TmFtZSI6Ik1hamlnYSIsImVtYWlsIjoiZGJyZWVzMUBtYWlsaW5hdG9yLmNvbSIsInNwZW5kaW5nTGltaXQiOiIxMDcwNS4wIiwidGVybSI6MTIsInBheUN5Y2xlc1BlclllYXIiOjI2LCJlbGlnaWJsZSI6dHJ1ZSwiY2xpZW50TG9nb1VybCI6Imh0dHBzOi8vaW1hZ2VzLnB1cmNoYXNpbmdwb3dlci5jb20vY2xpZW50cy9sb2dvcy9xbHNfbG9nby5qcGciLCJyZXR1cm5VcmwiOiJodHRwczovL3Byb2o2LnB1cmNoYXNpbmdwb3dlci5jb20vc3RvcmUvY2FydD9yZWNhbGN1bGF0ZT10cnVlJnJlc3RvcmVDYXJ0PXRydWUiLCJjYW5jZWxVcmwiOiJodHRwczovL3Byb2o2LnB1cmNoYXNpbmdwb3dlci5jb20vc3RvcmUiLCJrZWVwQWxpdmVVcmwiOiIifQ.US6Hxt-mYhMOfipmetA8Z5G3ffHKF0ICwgqN_SEq_X-8QfbcazTUTDLoq3YuTeoQoVZczJ3w8Pce_P7waULvgQ</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/html</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:69.0) Gecko/20100101 Firefox/69.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="320 /Views/Layout.html" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">www.purchasingpower.travel</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/Views/Layout.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://www.purchasingpower.travel/app/Home?jwt=eyJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJwcGMiLCJpYXQiOjE1NDE2NzQyMzksImp0aSI6IjVlODg3MDRiLWUyMDctNDViOS1hNGU4LTdjMjdiYzQzNGE1MyIsImNsaWVudElkIjoiMjMxNSIsImN1c3RvbWVySWQiOiJkYnJlZXMxQG1haWxpbmF0b3IuY29tIiwiZmlyc3ROYW1lIjoiU3Jpbml2YXMiLCJsYXN0TmFtZSI6Ik1hamlnYSIsImVtYWlsIjoiZGJyZWVzMUBtYWlsaW5hdG9yLmNvbSIsInNwZW5kaW5nTGltaXQiOiIxMDcwNS4wIiwidGVybSI6MTIsInBheUN5Y2xlc1BlclllYXIiOjI2LCJlbGlnaWJsZSI6dHJ1ZSwiY2xpZW50TG9nb1VybCI6Imh0dHBzOi8vaW1hZ2VzLnB1cmNoYXNpbmdwb3dlci5jb20vY2xpZW50cy9sb2dvcy9xbHNfbG9nby5qcGciLCJyZXR1cm5VcmwiOiJodHRwczovL3Byb2o2LnB1cmNoYXNpbmdwb3dlci5jb20vc3RvcmUvY2FydD9yZWNhbGN1bGF0ZT10cnVlJnJlc3RvcmVDYXJ0PXRydWUiLCJjYW5jZWxVcmwiOiJodHRwczovL3Byb2o2LnB1cmNoYXNpbmdwb3dlci5jb20vc3RvcmUiLCJrZWVwQWxpdmVVcmwiOiIifQ.US6Hxt-mYhMOfipmetA8Z5G3ffHKF0ICwgqN_SEq_X-8QfbcazTUTDLoq3YuTeoQoVZczJ3w8Pce_P7waULvgQ</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:69.0) Gecko/20100101 Firefox/69.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="321 /Views/Home.html" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">www.purchasingpower.travel</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/Views/Home.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://www.purchasingpower.travel/app/Home?jwt=eyJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJwcGMiLCJpYXQiOjE1NDE2NzQyMzksImp0aSI6IjVlODg3MDRiLWUyMDctNDViOS1hNGU4LTdjMjdiYzQzNGE1MyIsImNsaWVudElkIjoiMjMxNSIsImN1c3RvbWVySWQiOiJkYnJlZXMxQG1haWxpbmF0b3IuY29tIiwiZmlyc3ROYW1lIjoiU3Jpbml2YXMiLCJsYXN0TmFtZSI6Ik1hamlnYSIsImVtYWlsIjoiZGJyZWVzMUBtYWlsaW5hdG9yLmNvbSIsInNwZW5kaW5nTGltaXQiOiIxMDcwNS4wIiwidGVybSI6MTIsInBheUN5Y2xlc1BlclllYXIiOjI2LCJlbGlnaWJsZSI6dHJ1ZSwiY2xpZW50TG9nb1VybCI6Imh0dHBzOi8vaW1hZ2VzLnB1cmNoYXNpbmdwb3dlci5jb20vY2xpZW50cy9sb2dvcy9xbHNfbG9nby5qcGciLCJyZXR1cm5VcmwiOiJodHRwczovL3Byb2o2LnB1cmNoYXNpbmdwb3dlci5jb20vc3RvcmUvY2FydD9yZWNhbGN1bGF0ZT10cnVlJnJlc3RvcmVDYXJ0PXRydWUiLCJjYW5jZWxVcmwiOiJodHRwczovL3Byb2o2LnB1cmNoYXNpbmdwb3dlci5jb20vc3RvcmUiLCJrZWVwQWxpdmVVcmwiOiIifQ.US6Hxt-mYhMOfipmetA8Z5G3ffHKF0ICwgqN_SEq_X-8QfbcazTUTDLoq3YuTeoQoVZczJ3w8Pce_P7waULvgQ</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:69.0) Gecko/20100101 Firefox/69.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="337 /Api/api/Markup/GetMarkupList" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">www.purchasingpower.travel</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/Api/api/Markup/GetMarkupList</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://www.purchasingpower.travel/app/Home?jwt=eyJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJwcGMiLCJpYXQiOjE1NDE2NzQyMzksImp0aSI6IjVlODg3MDRiLWUyMDctNDViOS1hNGU4LTdjMjdiYzQzNGE1MyIsImNsaWVudElkIjoiMjMxNSIsImN1c3RvbWVySWQiOiJkYnJlZXMxQG1haWxpbmF0b3IuY29tIiwiZmlyc3ROYW1lIjoiU3Jpbml2YXMiLCJsYXN0TmFtZSI6Ik1hamlnYSIsImVtYWlsIjoiZGJyZWVzMUBtYWlsaW5hdG9yLmNvbSIsInNwZW5kaW5nTGltaXQiOiIxMDcwNS4wIiwidGVybSI6MTIsInBheUN5Y2xlc1BlclllYXIiOjI2LCJlbGlnaWJsZSI6dHJ1ZSwiY2xpZW50TG9nb1VybCI6Imh0dHBzOi8vaW1hZ2VzLnB1cmNoYXNpbmdwb3dlci5jb20vY2xpZW50cy9sb2dvcy9xbHNfbG9nby5qcGciLCJyZXR1cm5VcmwiOiJodHRwczovL3Byb2o2LnB1cmNoYXNpbmdwb3dlci5jb20vc3RvcmUvY2FydD9yZWNhbGN1bGF0ZT10cnVlJnJlc3RvcmVDYXJ0PXRydWUiLCJjYW5jZWxVcmwiOiJodHRwczovL3Byb2o2LnB1cmNoYXNpbmdwb3dlci5jb20vc3RvcmUiLCJrZWVwQWxpdmVVcmwiOiIifQ.US6Hxt-mYhMOfipmetA8Z5G3ffHKF0ICwgqN_SEq_X-8QfbcazTUTDLoq3YuTeoQoVZczJ3w8Pce_P7waULvgQ</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:69.0) Gecko/20100101 Firefox/69.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="338 /Views/Partial/Header.html" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">www.purchasingpower.travel</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/Views/Partial/Header.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://www.purchasingpower.travel/app/Home?jwt=eyJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJwcGMiLCJpYXQiOjE1NDE2NzQyMzksImp0aSI6IjVlODg3MDRiLWUyMDctNDViOS1hNGU4LTdjMjdiYzQzNGE1MyIsImNsaWVudElkIjoiMjMxNSIsImN1c3RvbWVySWQiOiJkYnJlZXMxQG1haWxpbmF0b3IuY29tIiwiZmlyc3ROYW1lIjoiU3Jpbml2YXMiLCJsYXN0TmFtZSI6Ik1hamlnYSIsImVtYWlsIjoiZGJyZWVzMUBtYWlsaW5hdG9yLmNvbSIsInNwZW5kaW5nTGltaXQiOiIxMDcwNS4wIiwidGVybSI6MTIsInBheUN5Y2xlc1BlclllYXIiOjI2LCJlbGlnaWJsZSI6dHJ1ZSwiY2xpZW50TG9nb1VybCI6Imh0dHBzOi8vaW1hZ2VzLnB1cmNoYXNpbmdwb3dlci5jb20vY2xpZW50cy9sb2dvcy9xbHNfbG9nby5qcGciLCJyZXR1cm5VcmwiOiJodHRwczovL3Byb2o2LnB1cmNoYXNpbmdwb3dlci5jb20vc3RvcmUvY2FydD9yZWNhbGN1bGF0ZT10cnVlJnJlc3RvcmVDYXJ0PXRydWUiLCJjYW5jZWxVcmwiOiJodHRwczovL3Byb2o2LnB1cmNoYXNpbmdwb3dlci5jb20vc3RvcmUiLCJrZWVwQWxpdmVVcmwiOiIifQ.US6Hxt-mYhMOfipmetA8Z5G3ffHKF0ICwgqN_SEq_X-8QfbcazTUTDLoq3YuTeoQoVZczJ3w8Pce_P7waULvgQ</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:69.0) Gecko/20100101 Firefox/69.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="339 /Api/api/Home/GetHomePageImages" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">www.purchasingpower.travel</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/Api/api/Home/GetHomePageImages</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://www.purchasingpower.travel/app/Home?jwt=eyJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJwcGMiLCJpYXQiOjE1NDE2NzQyMzksImp0aSI6IjVlODg3MDRiLWUyMDctNDViOS1hNGU4LTdjMjdiYzQzNGE1MyIsImNsaWVudElkIjoiMjMxNSIsImN1c3RvbWVySWQiOiJkYnJlZXMxQG1haWxpbmF0b3IuY29tIiwiZmlyc3ROYW1lIjoiU3Jpbml2YXMiLCJsYXN0TmFtZSI6Ik1hamlnYSIsImVtYWlsIjoiZGJyZWVzMUBtYWlsaW5hdG9yLmNvbSIsInNwZW5kaW5nTGltaXQiOiIxMDcwNS4wIiwidGVybSI6MTIsInBheUN5Y2xlc1BlclllYXIiOjI2LCJlbGlnaWJsZSI6dHJ1ZSwiY2xpZW50TG9nb1VybCI6Imh0dHBzOi8vaW1hZ2VzLnB1cmNoYXNpbmdwb3dlci5jb20vY2xpZW50cy9sb2dvcy9xbHNfbG9nby5qcGciLCJyZXR1cm5VcmwiOiJodHRwczovL3Byb2o2LnB1cmNoYXNpbmdwb3dlci5jb20vc3RvcmUvY2FydD9yZWNhbGN1bGF0ZT10cnVlJnJlc3RvcmVDYXJ0PXRydWUiLCJjYW5jZWxVcmwiOiJodHRwczovL3Byb2o2LnB1cmNoYXNpbmdwb3dlci5jb20vc3RvcmUiLCJrZWVwQWxpdmVVcmwiOiIifQ.US6Hxt-mYhMOfipmetA8Z5G3ffHKF0ICwgqN_SEq_X-8QfbcazTUTDLoq3YuTeoQoVZczJ3w8Pce_P7waULvgQ</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:69.0) Gecko/20100101 Firefox/69.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="340 /Views/Partial/Footer.html" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">www.purchasingpower.travel</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/Views/Partial/Footer.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://www.purchasingpower.travel/app/Home?jwt=eyJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJwcGMiLCJpYXQiOjE1NDE2NzQyMzksImp0aSI6IjVlODg3MDRiLWUyMDctNDViOS1hNGU4LTdjMjdiYzQzNGE1MyIsImNsaWVudElkIjoiMjMxNSIsImN1c3RvbWVySWQiOiJkYnJlZXMxQG1haWxpbmF0b3IuY29tIiwiZmlyc3ROYW1lIjoiU3Jpbml2YXMiLCJsYXN0TmFtZSI6Ik1hamlnYSIsImVtYWlsIjoiZGJyZWVzMUBtYWlsaW5hdG9yLmNvbSIsInNwZW5kaW5nTGltaXQiOiIxMDcwNS4wIiwidGVybSI6MTIsInBheUN5Y2xlc1BlclllYXIiOjI2LCJlbGlnaWJsZSI6dHJ1ZSwiY2xpZW50TG9nb1VybCI6Imh0dHBzOi8vaW1hZ2VzLnB1cmNoYXNpbmdwb3dlci5jb20vY2xpZW50cy9sb2dvcy9xbHNfbG9nby5qcGciLCJyZXR1cm5VcmwiOiJodHRwczovL3Byb2o2LnB1cmNoYXNpbmdwb3dlci5jb20vc3RvcmUvY2FydD9yZWNhbGN1bGF0ZT10cnVlJnJlc3RvcmVDYXJ0PXRydWUiLCJjYW5jZWxVcmwiOiJodHRwczovL3Byb2o2LnB1cmNoYXNpbmdwb3dlci5jb20vc3RvcmUiLCJrZWVwQWxpdmVVcmwiOiIifQ.US6Hxt-mYhMOfipmetA8Z5G3ffHKF0ICwgqN_SEq_X-8QfbcazTUTDLoq3YuTeoQoVZczJ3w8Pce_P7waULvgQ</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:69.0) Gecko/20100101 Firefox/69.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="347 /Api/api/User/GetPPCUserInfo" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="JWTToken" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">JWTToken</stringProp>
                  <stringProp name="Argument.value">eyJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJwcGMiLCJpYXQiOjE1NDE2NzQyMzksImp0aSI6IjVlODg3MDRiLWUyMDctNDViOS1hNGU4LTdjMjdiYzQzNGE1MyIsImNsaWVudElkIjoiMjMxNSIsImN1c3RvbWVySWQiOiJkYnJlZXMxQG1haWxpbmF0b3IuY29tIiwiZmlyc3ROYW1lIjoiU3Jpbml2YXMiLCJsYXN0TmFtZSI6Ik1hamlnYSIsImVtYWlsIjoiZGJyZWVzMUBtYWlsaW5hdG9yLmNvbSIsInNwZW5kaW5nTGltaXQiOiIxMDcwNS4wIiwidGVybSI6MTIsInBheUN5Y2xlc1BlclllYXIiOjI2LCJlbGlnaWJsZSI6dHJ1ZSwiY2xpZW50TG9nb1VybCI6Imh0dHBzOi8vaW1hZ2VzLnB1cmNoYXNpbmdwb3dlci5jb20vY2xpZW50cy9sb2dvcy9xbHNfbG9nby5qcGciLCJyZXR1cm5VcmwiOiJodHRwczovL3Byb2o2LnB1cmNoYXNpbmdwb3dlci5jb20vc3RvcmUvY2FydD9yZWNhbGN1bGF0ZT10cnVlJnJlc3RvcmVDYXJ0PXRydWUiLCJjYW5jZWxVcmwiOiJodHRwczovL3Byb2o2LnB1cmNoYXNpbmdwb3dlci5jb20vc3RvcmUiLCJrZWVwQWxpdmVVcmwiOiIifQ.US6Hxt-mYhMOfipmetA8Z5G3ffHKF0ICwgqN_SEq_X-8QfbcazTUTDLoq3YuTeoQoVZczJ3w8Pce_P7waULvgQ</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">www.purchasingpower.travel</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/Api/api/User/GetPPCUserInfo</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://www.purchasingpower.travel/app/Home?jwt=eyJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJwcGMiLCJpYXQiOjE1NDE2NzQyMzksImp0aSI6IjVlODg3MDRiLWUyMDctNDViOS1hNGU4LTdjMjdiYzQzNGE1MyIsImNsaWVudElkIjoiMjMxNSIsImN1c3RvbWVySWQiOiJkYnJlZXMxQG1haWxpbmF0b3IuY29tIiwiZmlyc3ROYW1lIjoiU3Jpbml2YXMiLCJsYXN0TmFtZSI6Ik1hamlnYSIsImVtYWlsIjoiZGJyZWVzMUBtYWlsaW5hdG9yLmNvbSIsInNwZW5kaW5nTGltaXQiOiIxMDcwNS4wIiwidGVybSI6MTIsInBheUN5Y2xlc1BlclllYXIiOjI2LCJlbGlnaWJsZSI6dHJ1ZSwiY2xpZW50TG9nb1VybCI6Imh0dHBzOi8vaW1hZ2VzLnB1cmNoYXNpbmdwb3dlci5jb20vY2xpZW50cy9sb2dvcy9xbHNfbG9nby5qcGciLCJyZXR1cm5VcmwiOiJodHRwczovL3Byb2o2LnB1cmNoYXNpbmdwb3dlci5jb20vc3RvcmUvY2FydD9yZWNhbGN1bGF0ZT10cnVlJnJlc3RvcmVDYXJ0PXRydWUiLCJjYW5jZWxVcmwiOiJodHRwczovL3Byb2o2LnB1cmNoYXNpbmdwb3dlci5jb20vc3RvcmUiLCJrZWVwQWxpdmVVcmwiOiIifQ.US6Hxt-mYhMOfipmetA8Z5G3ffHKF0ICwgqN_SEq_X-8QfbcazTUTDLoq3YuTeoQoVZczJ3w8Pce_P7waULvgQ</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:69.0) Gecko/20100101 Firefox/69.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="clientId" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">clientId</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;clientId&quot;:&quot;(\d+)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="userid" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">userid</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;id&quot;:(\d+),&quot;iss</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="348 /Api/api/User/GetPPCUserInfo" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="JWTToken" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">JWTToken</stringProp>
                  <stringProp name="Argument.value">eyJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJwcGMiLCJpYXQiOjE1NDE2NzQyMzksImp0aSI6IjVlODg3MDRiLWUyMDctNDViOS1hNGU4LTdjMjdiYzQzNGE1MyIsImNsaWVudElkIjoiMjMxNSIsImN1c3RvbWVySWQiOiJkYnJlZXMxQG1haWxpbmF0b3IuY29tIiwiZmlyc3ROYW1lIjoiU3Jpbml2YXMiLCJsYXN0TmFtZSI6Ik1hamlnYSIsImVtYWlsIjoiZGJyZWVzMUBtYWlsaW5hdG9yLmNvbSIsInNwZW5kaW5nTGltaXQiOiIxMDcwNS4wIiwidGVybSI6MTIsInBheUN5Y2xlc1BlclllYXIiOjI2LCJlbGlnaWJsZSI6dHJ1ZSwiY2xpZW50TG9nb1VybCI6Imh0dHBzOi8vaW1hZ2VzLnB1cmNoYXNpbmdwb3dlci5jb20vY2xpZW50cy9sb2dvcy9xbHNfbG9nby5qcGciLCJyZXR1cm5VcmwiOiJodHRwczovL3Byb2o2LnB1cmNoYXNpbmdwb3dlci5jb20vc3RvcmUvY2FydD9yZWNhbGN1bGF0ZT10cnVlJnJlc3RvcmVDYXJ0PXRydWUiLCJjYW5jZWxVcmwiOiJodHRwczovL3Byb2o2LnB1cmNoYXNpbmdwb3dlci5jb20vc3RvcmUiLCJrZWVwQWxpdmVVcmwiOiIifQ.US6Hxt-mYhMOfipmetA8Z5G3ffHKF0ICwgqN_SEq_X-8QfbcazTUTDLoq3YuTeoQoVZczJ3w8Pce_P7waULvgQ</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">www.purchasingpower.travel</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/Api/api/User/GetPPCUserInfo</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://www.purchasingpower.travel/app/Home?jwt=eyJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJwcGMiLCJpYXQiOjE1NDE2NzQyMzksImp0aSI6IjVlODg3MDRiLWUyMDctNDViOS1hNGU4LTdjMjdiYzQzNGE1MyIsImNsaWVudElkIjoiMjMxNSIsImN1c3RvbWVySWQiOiJkYnJlZXMxQG1haWxpbmF0b3IuY29tIiwiZmlyc3ROYW1lIjoiU3Jpbml2YXMiLCJsYXN0TmFtZSI6Ik1hamlnYSIsImVtYWlsIjoiZGJyZWVzMUBtYWlsaW5hdG9yLmNvbSIsInNwZW5kaW5nTGltaXQiOiIxMDcwNS4wIiwidGVybSI6MTIsInBheUN5Y2xlc1BlclllYXIiOjI2LCJlbGlnaWJsZSI6dHJ1ZSwiY2xpZW50TG9nb1VybCI6Imh0dHBzOi8vaW1hZ2VzLnB1cmNoYXNpbmdwb3dlci5jb20vY2xpZW50cy9sb2dvcy9xbHNfbG9nby5qcGciLCJyZXR1cm5VcmwiOiJodHRwczovL3Byb2o2LnB1cmNoYXNpbmdwb3dlci5jb20vc3RvcmUvY2FydD9yZWNhbGN1bGF0ZT10cnVlJnJlc3RvcmVDYXJ0PXRydWUiLCJjYW5jZWxVcmwiOiJodHRwczovL3Byb2o2LnB1cmNoYXNpbmdwb3dlci5jb20vc3RvcmUiLCJrZWVwQWxpdmVVcmwiOiIifQ.US6Hxt-mYhMOfipmetA8Z5G3ffHKF0ICwgqN_SEq_X-8QfbcazTUTDLoq3YuTeoQoVZczJ3w8Pce_P7waULvgQ</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:69.0) Gecko/20100101 Firefox/69.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="02-SelectCity" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="374 /Api/api/Hotels/GetHotelSearchLocationsList" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="searchString" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">searchString</stringProp>
                  <stringProp name="Argument.value">New+york</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">www.purchasingpower.travel</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/Api/api/Hotels/GetHotelSearchLocationsList</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://www.purchasingpower.travel/app/Home?jwt=eyJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJwcGMiLCJpYXQiOjE1NDE2NzQyMzksImp0aSI6IjVlODg3MDRiLWUyMDctNDViOS1hNGU4LTdjMjdiYzQzNGE1MyIsImNsaWVudElkIjoiMjMxNSIsImN1c3RvbWVySWQiOiJkYnJlZXMxQG1haWxpbmF0b3IuY29tIiwiZmlyc3ROYW1lIjoiU3Jpbml2YXMiLCJsYXN0TmFtZSI6Ik1hamlnYSIsImVtYWlsIjoiZGJyZWVzMUBtYWlsaW5hdG9yLmNvbSIsInNwZW5kaW5nTGltaXQiOiIxMDcwNS4wIiwidGVybSI6MTIsInBheUN5Y2xlc1BlclllYXIiOjI2LCJlbGlnaWJsZSI6dHJ1ZSwiY2xpZW50TG9nb1VybCI6Imh0dHBzOi8vaW1hZ2VzLnB1cmNoYXNpbmdwb3dlci5jb20vY2xpZW50cy9sb2dvcy9xbHNfbG9nby5qcGciLCJyZXR1cm5VcmwiOiJodHRwczovL3Byb2o2LnB1cmNoYXNpbmdwb3dlci5jb20vc3RvcmUvY2FydD9yZWNhbGN1bGF0ZT10cnVlJnJlc3RvcmVDYXJ0PXRydWUiLCJjYW5jZWxVcmwiOiJodHRwczovL3Byb2o2LnB1cmNoYXNpbmdwb3dlci5jb20vc3RvcmUiLCJrZWVwQWxpdmVVcmwiOiIifQ.US6Hxt-mYhMOfipmetA8Z5G3ffHKF0ICwgqN_SEq_X-8QfbcazTUTDLoq3YuTeoQoVZczJ3w8Pce_P7waULvgQ</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:69.0) Gecko/20100101 Firefox/69.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">3000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="03-SubmitSearch" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="378 /Views/HotelResult.html" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">www.purchasingpower.travel</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/Views/HotelResult.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://www.purchasingpower.travel/app/Home?jwt=eyJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJwcGMiLCJpYXQiOjE1NDE2NzQyMzksImp0aSI6IjVlODg3MDRiLWUyMDctNDViOS1hNGU4LTdjMjdiYzQzNGE1MyIsImNsaWVudElkIjoiMjMxNSIsImN1c3RvbWVySWQiOiJkYnJlZXMxQG1haWxpbmF0b3IuY29tIiwiZmlyc3ROYW1lIjoiU3Jpbml2YXMiLCJsYXN0TmFtZSI6Ik1hamlnYSIsImVtYWlsIjoiZGJyZWVzMUBtYWlsaW5hdG9yLmNvbSIsInNwZW5kaW5nTGltaXQiOiIxMDcwNS4wIiwidGVybSI6MTIsInBheUN5Y2xlc1BlclllYXIiOjI2LCJlbGlnaWJsZSI6dHJ1ZSwiY2xpZW50TG9nb1VybCI6Imh0dHBzOi8vaW1hZ2VzLnB1cmNoYXNpbmdwb3dlci5jb20vY2xpZW50cy9sb2dvcy9xbHNfbG9nby5qcGciLCJyZXR1cm5VcmwiOiJodHRwczovL3Byb2o2LnB1cmNoYXNpbmdwb3dlci5jb20vc3RvcmUvY2FydD9yZWNhbGN1bGF0ZT10cnVlJnJlc3RvcmVDYXJ0PXRydWUiLCJjYW5jZWxVcmwiOiJodHRwczovL3Byb2o2LnB1cmNoYXNpbmdwb3dlci5jb20vc3RvcmUiLCJrZWVwQWxpdmVVcmwiOiIifQ.US6Hxt-mYhMOfipmetA8Z5G3ffHKF0ICwgqN_SEq_X-8QfbcazTUTDLoq3YuTeoQoVZczJ3w8Pce_P7waULvgQ</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:69.0) Gecko/20100101 Firefox/69.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">3000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="382 /Api/api/Markup/GetMarkupListByCategory" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="category" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">category</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="clientCode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">clientCode</stringProp>
                  <stringProp name="Argument.value">${clientId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">www.purchasingpower.travel</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/Api/api/Markup/GetMarkupListByCategory</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://www.purchasingpower.travel/app/Home?jwt=eyJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJwcGMiLCJpYXQiOjE1NDE2NzQyMzksImp0aSI6IjVlODg3MDRiLWUyMDctNDViOS1hNGU4LTdjMjdiYzQzNGE1MyIsImNsaWVudElkIjoiMjMxNSIsImN1c3RvbWVySWQiOiJkYnJlZXMxQG1haWxpbmF0b3IuY29tIiwiZmlyc3ROYW1lIjoiU3Jpbml2YXMiLCJsYXN0TmFtZSI6Ik1hamlnYSIsImVtYWlsIjoiZGJyZWVzMUBtYWlsaW5hdG9yLmNvbSIsInNwZW5kaW5nTGltaXQiOiIxMDcwNS4wIiwidGVybSI6MTIsInBheUN5Y2xlc1BlclllYXIiOjI2LCJlbGlnaWJsZSI6dHJ1ZSwiY2xpZW50TG9nb1VybCI6Imh0dHBzOi8vaW1hZ2VzLnB1cmNoYXNpbmdwb3dlci5jb20vY2xpZW50cy9sb2dvcy9xbHNfbG9nby5qcGciLCJyZXR1cm5VcmwiOiJodHRwczovL3Byb2o2LnB1cmNoYXNpbmdwb3dlci5jb20vc3RvcmUvY2FydD9yZWNhbGN1bGF0ZT10cnVlJnJlc3RvcmVDYXJ0PXRydWUiLCJjYW5jZWxVcmwiOiJodHRwczovL3Byb2o2LnB1cmNoYXNpbmdwb3dlci5jb20vc3RvcmUiLCJrZWVwQWxpdmVVcmwiOiIifQ.US6Hxt-mYhMOfipmetA8Z5G3ffHKF0ICwgqN_SEq_X-8QfbcazTUTDLoq3YuTeoQoVZczJ3w8Pce_P7waULvgQ</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:69.0) Gecko/20100101 Firefox/69.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="385 /Api/api/Cart/GetCartItemList" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="CallForCart" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">CallForCart</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="userId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">userId</stringProp>
                  <stringProp name="Argument.value">${userid}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">www.purchasingpower.travel</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/Api/api/Cart/GetCartItemList</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://www.purchasingpower.travel/app/HotelResult</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:69.0) Gecko/20100101 Firefox/69.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="383 /Api/api/Markup/GetMarkupListByCategory" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="category" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">category</stringProp>
                  <stringProp name="Argument.value">7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="clientCode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">clientCode</stringProp>
                  <stringProp name="Argument.value">${clientId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">www.purchasingpower.travel</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/Api/api/Markup/GetMarkupListByCategory</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://www.purchasingpower.travel/app/Home?jwt=eyJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJwcGMiLCJpYXQiOjE1NDE2NzQyMzksImp0aSI6IjVlODg3MDRiLWUyMDctNDViOS1hNGU4LTdjMjdiYzQzNGE1MyIsImNsaWVudElkIjoiMjMxNSIsImN1c3RvbWVySWQiOiJkYnJlZXMxQG1haWxpbmF0b3IuY29tIiwiZmlyc3ROYW1lIjoiU3Jpbml2YXMiLCJsYXN0TmFtZSI6Ik1hamlnYSIsImVtYWlsIjoiZGJyZWVzMUBtYWlsaW5hdG9yLmNvbSIsInNwZW5kaW5nTGltaXQiOiIxMDcwNS4wIiwidGVybSI6MTIsInBheUN5Y2xlc1BlclllYXIiOjI2LCJlbGlnaWJsZSI6dHJ1ZSwiY2xpZW50TG9nb1VybCI6Imh0dHBzOi8vaW1hZ2VzLnB1cmNoYXNpbmdwb3dlci5jb20vY2xpZW50cy9sb2dvcy9xbHNfbG9nby5qcGciLCJyZXR1cm5VcmwiOiJodHRwczovL3Byb2o2LnB1cmNoYXNpbmdwb3dlci5jb20vc3RvcmUvY2FydD9yZWNhbGN1bGF0ZT10cnVlJnJlc3RvcmVDYXJ0PXRydWUiLCJjYW5jZWxVcmwiOiJodHRwczovL3Byb2o2LnB1cmNoYXNpbmdwb3dlci5jb20vc3RvcmUiLCJrZWVwQWxpdmVVcmwiOiIifQ.US6Hxt-mYhMOfipmetA8Z5G3ffHKF0ICwgqN_SEq_X-8QfbcazTUTDLoq3YuTeoQoVZczJ3w8Pce_P7waULvgQ</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:69.0) Gecko/20100101 Firefox/69.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="384 /Api/api/Hotels/GetResultsWithCacheV2" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="locationType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">locationType</stringProp>
                  <stringProp name="Argument.value">city_id</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="locationId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">locationId</stringProp>
                  <stringProp name="Argument.value">800049480</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="check_in" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">check_in</stringProp>
                  <stringProp name="Argument.value">${check_in}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="check_out" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">check_out</stringProp>
                  <stringProp name="Argument.value">${check_out}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="adults" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">adults</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="children" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">children</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="rooms" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rooms</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="locationName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">locationName</stringProp>
                  <stringProp name="Argument.value">New%20York%20City</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="feedProvider" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">feedProvider</stringProp>
                  <stringProp name="Argument.value">priceline</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">www.purchasingpower.travel</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/Api/api/Hotels/GetResultsWithCacheV2</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://www.purchasingpower.travel/app/Home?jwt=eyJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJwcGMiLCJpYXQiOjE1NDE2NzQyMzksImp0aSI6IjVlODg3MDRiLWUyMDctNDViOS1hNGU4LTdjMjdiYzQzNGE1MyIsImNsaWVudElkIjoiMjMxNSIsImN1c3RvbWVySWQiOiJkYnJlZXMxQG1haWxpbmF0b3IuY29tIiwiZmlyc3ROYW1lIjoiU3Jpbml2YXMiLCJsYXN0TmFtZSI6Ik1hamlnYSIsImVtYWlsIjoiZGJyZWVzMUBtYWlsaW5hdG9yLmNvbSIsInNwZW5kaW5nTGltaXQiOiIxMDcwNS4wIiwidGVybSI6MTIsInBheUN5Y2xlc1BlclllYXIiOjI2LCJlbGlnaWJsZSI6dHJ1ZSwiY2xpZW50TG9nb1VybCI6Imh0dHBzOi8vaW1hZ2VzLnB1cmNoYXNpbmdwb3dlci5jb20vY2xpZW50cy9sb2dvcy9xbHNfbG9nby5qcGciLCJyZXR1cm5VcmwiOiJodHRwczovL3Byb2o2LnB1cmNoYXNpbmdwb3dlci5jb20vc3RvcmUvY2FydD9yZWNhbGN1bGF0ZT10cnVlJnJlc3RvcmVDYXJ0PXRydWUiLCJjYW5jZWxVcmwiOiJodHRwczovL3Byb2o2LnB1cmNoYXNpbmdwb3dlci5jb20vc3RvcmUiLCJrZWVwQWxpdmVVcmwiOiIifQ.US6Hxt-mYhMOfipmetA8Z5G3ffHKF0ICwgqN_SEq_X-8QfbcazTUTDLoq3YuTeoQoVZczJ3w8Pce_P7waULvgQ</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:69.0) Gecko/20100101 Firefox/69.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="hotelId" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">hotelId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$[${jsonIndex}].hotelId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">0</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="ppn_bundle" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">ppn_bundle</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$[${jsonIndex}].ppn_bundle</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">0</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="hotelAddress" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">hotelAddress</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$[${jsonIndex}].hotelAddress</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">0</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="hotelDetail" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">hotelDetail</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$[${jsonIndex}].hotelDetail</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">0</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="rate_data" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">rate_data</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$[${jsonIndex}].hotelDetail</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">0</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="04-ViewHotel" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="418 /Views/HotelDetail.html" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">www.purchasingpower.travel</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/Views/HotelDetail.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://www.purchasingpower.travel/app/HotelResult</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:69.0) Gecko/20100101 Firefox/69.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">3000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="423 /%7B%7BImage%7D%7D" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">www.purchasingpower.travel</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/%7B%7BImage%7D%7D</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://www.purchasingpower.travel/app/HotelResult</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:69.0) Gecko/20100101 Firefox/69.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="426 /Api/api/Markup/GetMarkupListByCategory" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="category" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">category</stringProp>
                  <stringProp name="Argument.value">7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="clientCode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">clientCode</stringProp>
                  <stringProp name="Argument.value">${clientId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">www.purchasingpower.travel</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/Api/api/Markup/GetMarkupListByCategory</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://www.purchasingpower.travel/app/HotelResult</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:69.0) Gecko/20100101 Firefox/69.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="425 /Api/api/Markup/GetMarkupListByCategory" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="category" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">category</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="clientCode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">clientCode</stringProp>
                  <stringProp name="Argument.value">${clientId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">www.purchasingpower.travel</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/Api/api/Markup/GetMarkupListByCategory</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://www.purchasingpower.travel/app/HotelResult</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:69.0) Gecko/20100101 Firefox/69.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="429 /Api/api/Cart/GetCartItemList" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="CallForCart" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">CallForCart</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="userId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">userId</stringProp>
                  <stringProp name="Argument.value">${userid}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">www.purchasingpower.travel</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/Api/api/Cart/GetCartItemList</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://www.purchasingpower.travel/app/HotelDetail</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:69.0) Gecko/20100101 Firefox/69.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="427 /Api/api/Cart/GetReturnablePolicy" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">www.purchasingpower.travel</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/Api/api/Cart/GetReturnablePolicy</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://www.purchasingpower.travel/app/HotelResult</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:69.0) Gecko/20100101 Firefox/69.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="428 /Api/api/Hotels/GetHotelDetails" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="hotel_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hotel_id</stringProp>
                  <stringProp name="Argument.value">${hotelId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="check_in" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">check_in</stringProp>
                  <stringProp name="Argument.value">${check_in}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="check_out" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">check_out</stringProp>
                  <stringProp name="Argument.value">${check_out}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ppn_bundle" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ppn_bundle</stringProp>
                  <stringProp name="Argument.value">${ppn_bundle}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="adults" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">adults</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="childs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">childs</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="infants" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">infants</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="noOfRooms" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">noOfRooms</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="feedProvider" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">feedProvider</stringProp>
                  <stringProp name="Argument.value">priceline</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">www.purchasingpower.travel</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/Api/api/Hotels/GetHotelDetails</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://www.purchasingpower.travel/app/HotelResult</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:69.0) Gecko/20100101 Firefox/69.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="hotelName" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">hotelName</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">.hotelName</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">0</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="321666459">&quot;result&quot;:&quot;Successs</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="05-ChooseRoom" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="449 /views/HotelRoom.html" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">www.purchasingpower.travel</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/views/HotelRoom.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://www.purchasingpower.travel/app/HotelDetail</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:69.0) Gecko/20100101 Firefox/69.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">3000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="459 /Api/api/Markup/GetMarkupListByCategory" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="category" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">category</stringProp>
                  <stringProp name="Argument.value">7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="clientCode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">clientCode</stringProp>
                  <stringProp name="Argument.value">${clientId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">www.purchasingpower.travel</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/Api/api/Markup/GetMarkupListByCategory</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://www.purchasingpower.travel/app/HotelDetail</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:69.0) Gecko/20100101 Firefox/69.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="462 /Api/api/Cart/GetCartItemList" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="CallForCart" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">CallForCart</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="userId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">userId</stringProp>
                  <stringProp name="Argument.value">${userid}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">www.purchasingpower.travel</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/Api/api/Cart/GetCartItemList</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://www.purchasingpower.travel/app/HotelRoom</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:69.0) Gecko/20100101 Firefox/69.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="460 /Api/api/Cart/GetReturnablePolicy" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">www.purchasingpower.travel</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/Api/api/Cart/GetReturnablePolicy</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://www.purchasingpower.travel/app/HotelDetail</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:69.0) Gecko/20100101 Firefox/69.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="458 /Api/api/Markup/GetMarkupListByCategory" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="category" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">category</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="clientCode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">clientCode</stringProp>
                  <stringProp name="Argument.value">${clientId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">www.purchasingpower.travel</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/Api/api/Markup/GetMarkupListByCategory</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://www.purchasingpower.travel/app/HotelDetail</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:69.0) Gecko/20100101 Firefox/69.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="461 /Api/api/Hotels/GetContractRequest" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ppn_bundle" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ppn_bundle</stringProp>
                  <stringProp name="Argument.value">${ppn_bundle}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">www.purchasingpower.travel</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/Api/api/Hotels/GetContractRequest</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://www.purchasingpower.travel/app/HotelDetail</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:69.0) Gecko/20100101 Firefox/69.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="city" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">city</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;city&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="roomType" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">roomType</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;roomType&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="city" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">city</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;city&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="city" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">city</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;city&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="06-AddToCart" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="497 /Api/api/Hotels/AddToTravelCart" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;UserId&quot;:${userid},&quot;EntityName&quot;:&quot;${hotelName}&quot;,&quot;Address&quot;:&quot;${hotelAddress}&quot;,&quot;location&quot;:&quot;${city}&quot;,&quot;UnitName&quot;:&quot;${roomType}&quot;,&quot;EntityType&quot;:1,&quot;NoOfAdults&quot;:1,&quot;NoOfChilds&quot;:0,&quot;NoOfRooms&quot;:1,&quot;EntityDetail&quot;:${hotelDetail},&quot;UnitDetail&quot;:{&quot;rate_source&quot;:&quot;PCLN&quot;,&quot;rate_type&quot;:&quot;MER&quot;,&quot;ppn_bundle&quot;:&quot;${ppn_bundle}&quot;,&quot;check_in&quot;:&quot;2019-11-17&quot;,&quot;check_out&quot;:&quot;2019-11-20&quot;,&quot;num_rooms&quot;:&quot;1&quot;,&quot;num_adults&quot;:&quot;1&quot;,&quot;num_children&quot;:&quot;0&quot;,&quot;num_nights&quot;:&quot;3&quot;,&quot;allowed_cards_data&quot;:{&quot;card&quot;:[{&quot;card_type&quot;:&quot;VI&quot;,&quot;name&quot;:&quot;Visa&quot;},{&quot;card_type&quot;:&quot;MC&quot;,&quot;name&quot;:&quot;Master Card&quot;},{&quot;card_type&quot;:&quot;AX&quot;,&quot;name&quot;:&quot;American Express&quot;},{&quot;card_type&quot;:&quot;DS&quot;,&quot;name&quot;:&quot;Discover&quot;}]},&quot;hotel&quot;:{&quot;hotel_id&quot;:&quot;${hotelId}&quot;,&quot;hotel_name&quot;:&quot;${hotelName}&quot;,&quot;property_type&quot;:&quot;&quot;,&quot;phone_number&quot;:&quot;201-440-4500&quot;,&quot;star_rating&quot;:&quot;1&quot;,&quot;thumbnail&quot;:&quot;//mobileimg.priceline.com/htlimg/17/17211304/thumbnail-150-square.jpg&quot;,&quot;city&quot;:{&quot;id&quot;:&quot;800049205&quot;,&quot;name&quot;:&quot;Little Ferry&quot;},&quot;address&quot;:{&quot;address_line_one&quot;:&quot;1 Valley Road&quot;,&quot;city_name&quot;:&quot;Little Ferry&quot;,&quot;state_code&quot;:&quot;NJ&quot;,&quot;zip&quot;:&quot;07643&quot;,&quot;country_code&quot;:&quot;US&quot;},&quot;geo&quot;:{&quot;lat&quot;:&quot;40.85484&quot;,&quot;lng&quot;:&quot;-74.03215099&quot;},&quot;hotel_chain&quot;:{&quot;name&quot;:&quot;Rodeway Inn&quot;,&quot;code&quot;:&quot;458&quot;},&quot;check_in_time&quot;:&quot;15:00&quot;,&quot;check_out_time&quot;:&quot;11:00&quot;,&quot;hotel_score&quot;:{&quot;guest_score&quot;:&quot;3.90&quot;,&quot;guest_score_count&quot;:&quot;10&quot;,&quot;hmi_score&quot;:&quot;1.1&quot;,&quot;city_rank&quot;:&quot;7&quot;,&quot;review_rating_desc&quot;:&quot;Poor&quot;}},&quot;allowed_countries_data&quot;:{&quot;country&quot;:[{&quot;code&quot;:&quot;US&quot;,&quot;name&quot;:&quot;United States&quot;,&quot;state_data&quot;:{&quot;state&quot;:[{&quot;code&quot;:&quot;AA&quot;,&quot;name&quot;:&quot;Armed Forces Americas&quot;},{&quot;code&quot;:&quot;AE&quot;,&quot;name&quot;:&quot;Armed Forces Elsewhere&quot;},{&quot;code&quot;:&quot;AP&quot;,&quot;name&quot;:&quot;Armed Forces Pacific&quot;},{&quot;code&quot;:&quot;AL&quot;,&quot;name&quot;:&quot;Alabama&quot;},{&quot;code&quot;:&quot;AK&quot;,&quot;name&quot;:&quot;Alaska&quot;},{&quot;code&quot;:&quot;AZ&quot;,&quot;name&quot;:&quot;Arizona&quot;},{&quot;code&quot;:&quot;AR&quot;,&quot;name&quot;:&quot;Arkansas&quot;},{&quot;code&quot;:&quot;CA&quot;,&quot;name&quot;:&quot;California&quot;},{&quot;code&quot;:&quot;CO&quot;,&quot;name&quot;:&quot;Colorado&quot;},{&quot;code&quot;:&quot;CT&quot;,&quot;name&quot;:&quot;Connecticut&quot;},{&quot;code&quot;:&quot;DE&quot;,&quot;name&quot;:&quot;Delaware&quot;},{&quot;code&quot;:&quot;DC&quot;,&quot;name&quot;:&quot;District of Columbia&quot;},{&quot;code&quot;:&quot;FL&quot;,&quot;name&quot;:&quot;Florida&quot;},{&quot;code&quot;:&quot;GA&quot;,&quot;name&quot;:&quot;Georgia&quot;},{&quot;code&quot;:&quot;HI&quot;,&quot;name&quot;:&quot;Hawaii&quot;},{&quot;code&quot;:&quot;ID&quot;,&quot;name&quot;:&quot;Idaho&quot;},{&quot;code&quot;:&quot;IL&quot;,&quot;name&quot;:&quot;Illinois&quot;},{&quot;code&quot;:&quot;IN&quot;,&quot;name&quot;:&quot;Indiana&quot;},{&quot;code&quot;:&quot;IA&quot;,&quot;name&quot;:&quot;Iowa&quot;},{&quot;code&quot;:&quot;KS&quot;,&quot;name&quot;:&quot;Kansas&quot;},{&quot;code&quot;:&quot;KY&quot;,&quot;name&quot;:&quot;Kentucky&quot;},{&quot;code&quot;:&quot;LA&quot;,&quot;name&quot;:&quot;Louisiana&quot;},{&quot;code&quot;:&quot;ME&quot;,&quot;name&quot;:&quot;Maine&quot;},{&quot;code&quot;:&quot;MD&quot;,&quot;name&quot;:&quot;Maryland&quot;},{&quot;code&quot;:&quot;MA&quot;,&quot;name&quot;:&quot;Massachusetts&quot;},{&quot;code&quot;:&quot;MI&quot;,&quot;name&quot;:&quot;Michigan&quot;},{&quot;code&quot;:&quot;MN&quot;,&quot;name&quot;:&quot;Minnesota&quot;},{&quot;code&quot;:&quot;MS&quot;,&quot;name&quot;:&quot;Mississippi&quot;},{&quot;code&quot;:&quot;MO&quot;,&quot;name&quot;:&quot;Missouri&quot;},{&quot;code&quot;:&quot;MT&quot;,&quot;name&quot;:&quot;Montana&quot;},{&quot;code&quot;:&quot;NE&quot;,&quot;name&quot;:&quot;Nebraska&quot;},{&quot;code&quot;:&quot;NV&quot;,&quot;name&quot;:&quot;Nevada&quot;},{&quot;code&quot;:&quot;NH&quot;,&quot;name&quot;:&quot;New Hampshire&quot;},{&quot;code&quot;:&quot;NJ&quot;,&quot;name&quot;:&quot;New Jersey&quot;},{&quot;code&quot;:&quot;NM&quot;,&quot;name&quot;:&quot;New Mexico&quot;},{&quot;code&quot;:&quot;NY&quot;,&quot;name&quot;:&quot;New York&quot;},{&quot;code&quot;:&quot;NC&quot;,&quot;name&quot;:&quot;North Carolina&quot;},{&quot;code&quot;:&quot;ND&quot;,&quot;name&quot;:&quot;North Dakota&quot;},{&quot;code&quot;:&quot;OH&quot;,&quot;name&quot;:&quot;Ohio&quot;},{&quot;code&quot;:&quot;OK&quot;,&quot;name&quot;:&quot;Oklahoma&quot;},{&quot;code&quot;:&quot;OR&quot;,&quot;name&quot;:&quot;Oregon&quot;},{&quot;code&quot;:&quot;PA&quot;,&quot;name&quot;:&quot;Pennsylvania&quot;},{&quot;code&quot;:&quot;RI&quot;,&quot;name&quot;:&quot;Rhode Island&quot;},{&quot;code&quot;:&quot;SC&quot;,&quot;name&quot;:&quot;South Carolina&quot;},{&quot;code&quot;:&quot;SD&quot;,&quot;name&quot;:&quot;South Dakota&quot;},{&quot;code&quot;:&quot;TN&quot;,&quot;name&quot;:&quot;Tennessee&quot;},{&quot;code&quot;:&quot;TX&quot;,&quot;name&quot;:&quot;Texas&quot;},{&quot;code&quot;:&quot;UT&quot;,&quot;name&quot;:&quot;Utah&quot;},{&quot;code&quot;:&quot;VT&quot;,&quot;name&quot;:&quot;Vermont&quot;},{&quot;code&quot;:&quot;VA&quot;,&quot;name&quot;:&quot;Virginia&quot;},{&quot;code&quot;:&quot;WA&quot;,&quot;name&quot;:&quot;Washington&quot;},{&quot;code&quot;:&quot;WV&quot;,&quot;name&quot;:&quot;West Virginia&quot;},{&quot;code&quot;:&quot;WI&quot;,&quot;name&quot;:&quot;Wisconsin&quot;},{&quot;code&quot;:&quot;WY&quot;,&quot;name&quot;:&quot;Wyoming&quot;}]}},{&quot;code&quot;:&quot;CA&quot;,&quot;name&quot;:&quot;Canada&quot;,&quot;state_data&quot;:{&quot;state&quot;:[{&quot;code&quot;:&quot;AB&quot;,&quot;name&quot;:&quot;Alberta&quot;},{&quot;code&quot;:&quot;BC&quot;,&quot;name&quot;:&quot;British Columbia&quot;},{&quot;code&quot;:&quot;MB&quot;,&quot;name&quot;:&quot;Manitoba&quot;},{&quot;code&quot;:&quot;NB&quot;,&quot;name&quot;:&quot;New Brunswick&quot;},{&quot;code&quot;:&quot;NL&quot;,&quot;name&quot;:&quot;Newfoundland&quot;},{&quot;code&quot;:&quot;NT&quot;,&quot;name&quot;:&quot;Northwest Territories&quot;},{&quot;code&quot;:&quot;NS&quot;,&quot;name&quot;:&quot;Nova Scotia&quot;},{&quot;code&quot;:&quot;NU&quot;,&quot;name&quot;:&quot;Nunavut&quot;},{&quot;code&quot;:&quot;ON&quot;,&quot;name&quot;:&quot;Ontario&quot;},{&quot;code&quot;:&quot;PE&quot;,&quot;name&quot;:&quot;Prince Edward Island&quot;},{&quot;code&quot;:&quot;QC&quot;,&quot;name&quot;:&quot;Quebec&quot;},{&quot;code&quot;:&quot;SK&quot;,&quot;name&quot;:&quot;Saskatchewan&quot;},{&quot;code&quot;:&quot;YT&quot;,&quot;name&quot;:&quot;Yukon&quot;}]}},{&quot;code&quot;:&quot;GB&quot;,&quot;name&quot;:&quot;United Kingdom&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;AF&quot;,&quot;name&quot;:&quot;Afghanistan&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;AL&quot;,&quot;name&quot;:&quot;Albania&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;DZ&quot;,&quot;name&quot;:&quot;Algeria&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;AS&quot;,&quot;name&quot;:&quot;American Samoa&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;AD&quot;,&quot;name&quot;:&quot;Andorra&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;AO&quot;,&quot;name&quot;:&quot;Angola&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;AI&quot;,&quot;name&quot;:&quot;Anguilla&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;AQ&quot;,&quot;name&quot;:&quot;Antarctica&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;AG&quot;,&quot;name&quot;:&quot;Antigua And Barbuda&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;AR&quot;,&quot;name&quot;:&quot;Argentina&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;AM&quot;,&quot;name&quot;:&quot;Armenia&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;AW&quot;,&quot;name&quot;:&quot;Aruba&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;AU&quot;,&quot;name&quot;:&quot;Australia&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;AT&quot;,&quot;name&quot;:&quot;Austria&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;AZ&quot;,&quot;name&quot;:&quot;Azerbaijan&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;BS&quot;,&quot;name&quot;:&quot;Bahamas&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;BH&quot;,&quot;name&quot;:&quot;Bahrain&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;BD&quot;,&quot;name&quot;:&quot;Bangladesh&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;BB&quot;,&quot;name&quot;:&quot;Barbados&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;BY&quot;,&quot;name&quot;:&quot;Belarus&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;BE&quot;,&quot;name&quot;:&quot;Belgium&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;BZ&quot;,&quot;name&quot;:&quot;Belize&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;BJ&quot;,&quot;name&quot;:&quot;Benin&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;BM&quot;,&quot;name&quot;:&quot;Bermuda&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;BT&quot;,&quot;name&quot;:&quot;Bhutan&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;BO&quot;,&quot;name&quot;:&quot;Bolivia&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;BQ&quot;,&quot;name&quot;:&quot;Bonaire, Sint Eustatius And Saba&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;BA&quot;,&quot;name&quot;:&quot;Bosnia And Herzegovina&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;BW&quot;,&quot;name&quot;:&quot;Botswana&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;BV&quot;,&quot;name&quot;:&quot;Bouvet Island&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;BR&quot;,&quot;name&quot;:&quot;Brazil&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;IO&quot;,&quot;name&quot;:&quot;British Indian Ocean Territory&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;VG&quot;,&quot;name&quot;:&quot;British Virgin Islands&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;BN&quot;,&quot;name&quot;:&quot;Brunei&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;BG&quot;,&quot;name&quot;:&quot;Bulgaria&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;BF&quot;,&quot;name&quot;:&quot;Burkina Faso&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;BI&quot;,&quot;name&quot;:&quot;Burundi&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;KH&quot;,&quot;name&quot;:&quot;Cambodia&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;CM&quot;,&quot;name&quot;:&quot;Cameroon&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;CV&quot;,&quot;name&quot;:&quot;Cape Verde&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;KY&quot;,&quot;name&quot;:&quot;Cayman Islands&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;CF&quot;,&quot;name&quot;:&quot;Central African Republic&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;TD&quot;,&quot;name&quot;:&quot;Chad&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;CL&quot;,&quot;name&quot;:&quot;Chile&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;CN&quot;,&quot;name&quot;:&quot;China&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;CX&quot;,&quot;name&quot;:&quot;Christmas Island&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;CC&quot;,&quot;name&quot;:&quot;Cocos (Keeling) Islands&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;CO&quot;,&quot;name&quot;:&quot;Colombia&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;KM&quot;,&quot;name&quot;:&quot;Comoros&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;CG&quot;,&quot;name&quot;:&quot;Congo&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;CK&quot;,&quot;name&quot;:&quot;Cook Islands&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;CR&quot;,&quot;name&quot;:&quot;Costa Rica&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;HR&quot;,&quot;name&quot;:&quot;Croatia&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;CW&quot;,&quot;name&quot;:&quot;Curacao&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;CY&quot;,&quot;name&quot;:&quot;Cyprus&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;CZ&quot;,&quot;name&quot;:&quot;Czech Republic&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;CD&quot;,&quot;name&quot;:&quot;Dem Rep Of The Congo (Zaire)&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;DK&quot;,&quot;name&quot;:&quot;Denmark&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;DJ&quot;,&quot;name&quot;:&quot;Djibouti&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;DM&quot;,&quot;name&quot;:&quot;Dominica&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;DO&quot;,&quot;name&quot;:&quot;Dominican Republic&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;EC&quot;,&quot;name&quot;:&quot;Ecuador&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;EG&quot;,&quot;name&quot;:&quot;Egypt&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;SV&quot;,&quot;name&quot;:&quot;El Salvador&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;GQ&quot;,&quot;name&quot;:&quot;Equatorial Guinea&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;ER&quot;,&quot;name&quot;:&quot;Eritrea&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;EE&quot;,&quot;name&quot;:&quot;Estonia&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;ET&quot;,&quot;name&quot;:&quot;Ethiopia&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;FK&quot;,&quot;name&quot;:&quot;Falkland Islands (Islas Malvinas)&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;FO&quot;,&quot;name&quot;:&quot;Faroe Islands&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;FM&quot;,&quot;name&quot;:&quot;Federated States Of Micronesia&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;FJ&quot;,&quot;name&quot;:&quot;Fiji&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;FI&quot;,&quot;name&quot;:&quot;Finland&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;FR&quot;,&quot;name&quot;:&quot;France&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;GF&quot;,&quot;name&quot;:&quot;French Guiana&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;PF&quot;,&quot;name&quot;:&quot;French Polynesia&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;TF&quot;,&quot;name&quot;:&quot;French Southern And Antarctic Lands&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;GA&quot;,&quot;name&quot;:&quot;Gabon&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;GM&quot;,&quot;name&quot;:&quot;Gambia&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;GE&quot;,&quot;name&quot;:&quot;Georgia&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;DE&quot;,&quot;name&quot;:&quot;Germany&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;GH&quot;,&quot;name&quot;:&quot;Ghana&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;GI&quot;,&quot;name&quot;:&quot;Gibraltar&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;GR&quot;,&quot;name&quot;:&quot;Greece&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;GL&quot;,&quot;name&quot;:&quot;Greenland&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;GD&quot;,&quot;name&quot;:&quot;Grenada&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;GP&quot;,&quot;name&quot;:&quot;Guadeloupe&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;GU&quot;,&quot;name&quot;:&quot;Guam&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;GT&quot;,&quot;name&quot;:&quot;Guatemala&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;GG&quot;,&quot;name&quot;:&quot;Guernsey&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;GN&quot;,&quot;name&quot;:&quot;Guinea&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;GW&quot;,&quot;name&quot;:&quot;Guinea-Bissau&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;GY&quot;,&quot;name&quot;:&quot;Guyana&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;HT&quot;,&quot;name&quot;:&quot;Haiti&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;HM&quot;,&quot;name&quot;:&quot;Heard Island And Mcdonald Islands&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;VA&quot;,&quot;name&quot;:&quot;Holy See (Vatican City)&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;HN&quot;,&quot;name&quot;:&quot;Honduras&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;HK&quot;,&quot;name&quot;:&quot;Hong Kong&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;HU&quot;,&quot;name&quot;:&quot;Hungary&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;IS&quot;,&quot;name&quot;:&quot;Iceland&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;IN&quot;,&quot;name&quot;:&quot;India&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;ID&quot;,&quot;name&quot;:&quot;Indonesia&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;IQ&quot;,&quot;name&quot;:&quot;Iraq&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;IE&quot;,&quot;name&quot;:&quot;Ireland&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;IM&quot;,&quot;name&quot;:&quot;Isle Of Man&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;IL&quot;,&quot;name&quot;:&quot;Israel&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;IT&quot;,&quot;name&quot;:&quot;Italy&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;CI&quot;,&quot;name&quot;:&quot;Ivory Coast&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;JM&quot;,&quot;name&quot;:&quot;Jamaica&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;JP&quot;,&quot;name&quot;:&quot;Japan&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;JE&quot;,&quot;name&quot;:&quot;Jersey&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;JO&quot;,&quot;name&quot;:&quot;Jordan&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;KZ&quot;,&quot;name&quot;:&quot;Kazakhstan&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;KE&quot;,&quot;name&quot;:&quot;Kenya&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;KI&quot;,&quot;name&quot;:&quot;Kiribati&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;XK&quot;,&quot;name&quot;:&quot;Kosovo&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;KW&quot;,&quot;name&quot;:&quot;Kuwait&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;KG&quot;,&quot;name&quot;:&quot;Kyrgyzstan&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;LA&quot;,&quot;name&quot;:&quot;Laos&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;LV&quot;,&quot;name&quot;:&quot;Latvia&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;LB&quot;,&quot;name&quot;:&quot;Lebanon&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;LS&quot;,&quot;name&quot;:&quot;Lesotho&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;LR&quot;,&quot;name&quot;:&quot;Liberia&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;LY&quot;,&quot;name&quot;:&quot;Libya&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;LI&quot;,&quot;name&quot;:&quot;Liechtenstein&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;LT&quot;,&quot;name&quot;:&quot;Lithuania&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;LU&quot;,&quot;name&quot;:&quot;Luxembourg&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;MO&quot;,&quot;name&quot;:&quot;Macau&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;MK&quot;,&quot;name&quot;:&quot;Macedonia&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;MG&quot;,&quot;name&quot;:&quot;Madagascar&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;MW&quot;,&quot;name&quot;:&quot;Malawi&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;MY&quot;,&quot;name&quot;:&quot;Malaysia&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;MV&quot;,&quot;name&quot;:&quot;Maldives&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;ML&quot;,&quot;name&quot;:&quot;Mali&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;MT&quot;,&quot;name&quot;:&quot;Malta&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;MH&quot;,&quot;name&quot;:&quot;Marshall Islands&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;MQ&quot;,&quot;name&quot;:&quot;Martinique&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;MR&quot;,&quot;name&quot;:&quot;Mauritania&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;MU&quot;,&quot;name&quot;:&quot;Mauritius&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;YT&quot;,&quot;name&quot;:&quot;Mayotte&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;MX&quot;,&quot;name&quot;:&quot;Mexico&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;MD&quot;,&quot;name&quot;:&quot;Moldova&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;MC&quot;,&quot;name&quot;:&quot;Monaco&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;MN&quot;,&quot;name&quot;:&quot;Mongolia&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;ME&quot;,&quot;name&quot;:&quot;Montenegro&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;MS&quot;,&quot;name&quot;:&quot;Montserrat&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;MA&quot;,&quot;name&quot;:&quot;Morocco&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;MZ&quot;,&quot;name&quot;:&quot;Mozambique&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;MM&quot;,&quot;name&quot;:&quot;Myanmar&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;NA&quot;,&quot;name&quot;:&quot;Namibia&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;NR&quot;,&quot;name&quot;:&quot;Nauru&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;NP&quot;,&quot;name&quot;:&quot;Nepal&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;NL&quot;,&quot;name&quot;:&quot;Netherlands&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;NC&quot;,&quot;name&quot;:&quot;New Caledonia&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;NZ&quot;,&quot;name&quot;:&quot;New Zealand&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;NI&quot;,&quot;name&quot;:&quot;Nicaragua&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;NE&quot;,&quot;name&quot;:&quot;Niger&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;NG&quot;,&quot;name&quot;:&quot;Nigeria&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;NU&quot;,&quot;name&quot;:&quot;Niue&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;NF&quot;,&quot;name&quot;:&quot;Norfolk Island&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;MP&quot;,&quot;name&quot;:&quot;Northern Mariana Islands&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;NO&quot;,&quot;name&quot;:&quot;Norway&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;OM&quot;,&quot;name&quot;:&quot;Oman&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;PK&quot;,&quot;name&quot;:&quot;Pakistan&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;PW&quot;,&quot;name&quot;:&quot;Palau&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;PA&quot;,&quot;name&quot;:&quot;Panama&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;PG&quot;,&quot;name&quot;:&quot;Papua New Guinea&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;PY&quot;,&quot;name&quot;:&quot;Paraguay&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;PE&quot;,&quot;name&quot;:&quot;Peru&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;PH&quot;,&quot;name&quot;:&quot;Philippines&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;PN&quot;,&quot;name&quot;:&quot;Pitcairn Islands&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;PL&quot;,&quot;name&quot;:&quot;Poland&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;PT&quot;,&quot;name&quot;:&quot;Portugal&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;PR&quot;,&quot;name&quot;:&quot;Puerto Rico&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;QA&quot;,&quot;name&quot;:&quot;Qatar&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;KR&quot;,&quot;name&quot;:&quot;Republic Of Korea&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;RE&quot;,&quot;name&quot;:&quot;Reunion&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;RO&quot;,&quot;name&quot;:&quot;Romania&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;RU&quot;,&quot;name&quot;:&quot;Russia&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;RW&quot;,&quot;name&quot;:&quot;Rwanda&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;BL&quot;,&quot;name&quot;:&quot;Saint Barthelemy&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;MF&quot;,&quot;name&quot;:&quot;Saint Martin (French Part)&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;PM&quot;,&quot;name&quot;:&quot;Saint Pierre And Miquelon&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;VC&quot;,&quot;name&quot;:&quot;Saint Vincent And The Grenadines&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;WS&quot;,&quot;name&quot;:&quot;Samoa&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;SM&quot;,&quot;name&quot;:&quot;San Marino&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;ST&quot;,&quot;name&quot;:&quot;Sao Tome And Principe&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;SA&quot;,&quot;name&quot;:&quot;Saudi Arabia&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;SN&quot;,&quot;name&quot;:&quot;Senegal&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;RS&quot;,&quot;name&quot;:&quot;Serbia&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;SC&quot;,&quot;name&quot;:&quot;Seychelles&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;SL&quot;,&quot;name&quot;:&quot;Sierra Leone&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;SG&quot;,&quot;name&quot;:&quot;Singapore&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;SX&quot;,&quot;name&quot;:&quot;Sint Maarten (Dutch Part)&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;SK&quot;,&quot;name&quot;:&quot;Slovakia&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;SI&quot;,&quot;name&quot;:&quot;Slovenia&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;SB&quot;,&quot;name&quot;:&quot;Solomon Islands&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;SO&quot;,&quot;name&quot;:&quot;Somalia&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;ZA&quot;,&quot;name&quot;:&quot;South Africa&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;ES&quot;,&quot;name&quot;:&quot;Spain&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;LK&quot;,&quot;name&quot;:&quot;Sri Lanka&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;SH&quot;,&quot;name&quot;:&quot;St Helena&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;LC&quot;,&quot;name&quot;:&quot;St Lucia&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;KN&quot;,&quot;name&quot;:&quot;St. Kitts And Nevis&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;SR&quot;,&quot;name&quot;:&quot;Suriname&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;SJ&quot;,&quot;name&quot;:&quot;Svalbard&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;SZ&quot;,&quot;name&quot;:&quot;Swaziland&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;SE&quot;,&quot;name&quot;:&quot;Sweden&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;CH&quot;,&quot;name&quot;:&quot;Switzerland&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;TW&quot;,&quot;name&quot;:&quot;Taiwan&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;TJ&quot;,&quot;name&quot;:&quot;Tajikistan&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;TZ&quot;,&quot;name&quot;:&quot;Tanzania&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;TH&quot;,&quot;name&quot;:&quot;Thailand&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;TL&quot;,&quot;name&quot;:&quot;Timor-Leste&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;TG&quot;,&quot;name&quot;:&quot;Togo&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;TK&quot;,&quot;name&quot;:&quot;Tokelau&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;TO&quot;,&quot;name&quot;:&quot;Tonga&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;TT&quot;,&quot;name&quot;:&quot;Trinidad And Tobago&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;TN&quot;,&quot;name&quot;:&quot;Tunisia&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;TR&quot;,&quot;name&quot;:&quot;Turkey&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;TM&quot;,&quot;name&quot;:&quot;Turkmenistan&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;TC&quot;,&quot;name&quot;:&quot;Turks And Caicos Islands&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;TV&quot;,&quot;name&quot;:&quot;Tuvalu&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;UG&quot;,&quot;name&quot;:&quot;Uganda&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;UA&quot;,&quot;name&quot;:&quot;Ukraine&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;AE&quot;,&quot;name&quot;:&quot;United Arab Emirates&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;UY&quot;,&quot;name&quot;:&quot;Uruguay&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;UZ&quot;,&quot;name&quot;:&quot;Uzbekistan&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;VU&quot;,&quot;name&quot;:&quot;Vanuatu&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;VE&quot;,&quot;name&quot;:&quot;Venezuela&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;VN&quot;,&quot;name&quot;:&quot;Vietnam&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;VI&quot;,&quot;name&quot;:&quot;Virgin Islands&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;WF&quot;,&quot;name&quot;:&quot;Wallis And Futuna&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;YE&quot;,&quot;name&quot;:&quot;Yemen&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;ZM&quot;,&quot;name&quot;:&quot;Zambia&quot;,&quot;state_data&quot;:null},{&quot;code&quot;:&quot;ZW&quot;,&quot;name&quot;:&quot;Zimbabwe&quot;,&quot;state_data&quot;:null}]},&quot;room_info&quot;:{&quot;rate_plan_code&quot;:&quot;873390_MERCHANT_MERCHANT__7a18d35d-f53f-5cc5-ad3c-bfadb8d58acd&quot;,&quot;title&quot;:&quot;2 Queen Beds Nonsmoking&quot;,&quot;description&quot;:&quot;2 Queen Beds - Nonsmoking Room - Free Breakfast, Free Wifi, Fridge, Microwave - Free Parking.&quot;,&quot;bed_type&quot;:&quot;${roomType}&quot;,&quot;occupancy_limit&quot;:&quot;1&quot;,&quot;pre_paid&quot;:&quot;1&quot;,&quot;price_details&quot;:{&quot;booked_currency&quot;:&quot;USD&quot;,&quot;baseline_currency&quot;:&quot;USD&quot;,&quot;baseline_symbol&quot;:&quot;$&quot;,&quot;baseline_price&quot;:&quot;79&quot;,&quot;baseline_processing_fee&quot;:&quot;0&quot;,&quot;baseline_property_fee&quot;:&quot;0&quot;,&quot;baseline_taxes&quot;:&quot;40.26&quot;,&quot;baseline_sub_total&quot;:&quot;237&quot;,&quot;baseline_total&quot;:&quot;277.26&quot;,&quot;source_currency&quot;:&quot;USD&quot;,&quot;source_symbol&quot;:&quot;$&quot;,&quot;source_price&quot;:&quot;79&quot;,&quot;source_processing_fee&quot;:&quot;0&quot;,&quot;source_property_fee&quot;:&quot;0&quot;,&quot;source_taxes&quot;:&quot;40.26&quot;,&quot;source_sub_total&quot;:&quot;237&quot;,&quot;source_total&quot;:&quot;277.26&quot;,&quot;display_currency&quot;:&quot;USD&quot;,&quot;display_symbol&quot;:&quot;$&quot;,&quot;display_price&quot;:&quot;79&quot;,&quot;display_processing_fee&quot;:&quot;0&quot;,&quot;display_property_fee&quot;:&quot;0&quot;,&quot;display_taxes&quot;:&quot;40.26&quot;,&quot;display_sub_total&quot;:&quot;237&quot;,&quot;display_total&quot;:&quot;277.26&quot;,&quot;attribute_data&quot;:{&quot;tax_data&quot;:{&quot;tax&quot;:{&quot;type&quot;:&quot;TAX&quot;,&quot;source_currency&quot;:&quot;USD&quot;,&quot;source_amount&quot;:&quot;40.26&quot;,&quot;display_currency&quot;:&quot;USD&quot;,&quot;display_amount&quot;:&quot;40.26&quot;,&quot;attribute&quot;:&quot;Exclusive&quot;}}},&quot;night_price_data&quot;:{&quot;night_price&quot;:{&quot;source_night_price&quot;:&quot;79.00&quot;,&quot;display_night_price&quot;:&quot;79.00&quot;}},&quot;nightly_rate_changes&quot;:&quot;false&quot;,&quot;promo&quot;:{&quot;title&quot;:&quot;&quot;,&quot;description&quot;:&quot;&quot;,&quot;type&quot;:&quot;&quot;,&quot;terms&quot;:&quot;&quot;,&quot;strikeout_price&quot;:&quot;&quot;,&quot;source_strikeout_price&quot;:&quot;&quot;,&quot;display_strikeout_price&quot;:&quot;&quot;,&quot;required&quot;:&quot;&quot;}},&quot;photos&quot;:{&quot;hotel_id&quot;:&quot;${hotelId}&quot;,&quot;photo_data&quot;:{&quot;photo&quot;:[&quot;${scheme}://q-xx.bstatic.com/xdata/images/hotel/max500/169886709.jpg?k=a1df25716541f5e684d3c250f2a2236ac2b4dffdbf28bdbe0214e96e9cad525b&amp;o=&quot;,&quot;${scheme}://q-xx.bstatic.com/xdata/images/hotel/max500/169886534.jpg?k=0ac2dee85545902db77cc8fe791635900e2761b031d1d6d0769cf5dc7fcbf77d&amp;o=&quot;,&quot;${scheme}://q-xx.bstatic.com/xdata/images/hotel/max500/169886555.jpg?k=47f270975a96dd5c6b295be90b8a3494f3709102e6f9a85028fa6486ee692500&amp;o=&quot;,&quot;${scheme}://q-xx.bstatic.com/xdata/images/hotel/max500/169886566.jpg?k=16c1feed505dd687c5ca47815aaff8524abc36d45e5c77419fa24dff0d84b654&amp;o=&quot;,&quot;${scheme}://q-xx.bstatic.com/xdata/images/hotel/max500/169886576.jpg?k=0af1a672d5a35a463aff73dbb383bb8eb5396e3f6bcbce2080ec836375525dff&amp;o=&quot;,&quot;${scheme}://q-xx.bstatic.com/xdata/images/hotel/max500/169886588.jpg?k=f6ca5c825c4ed0171ecb789c88360827a9056e9938fde4936a0e800b370e7188&amp;o=&quot;,&quot;${scheme}://q-xx.bstatic.com/xdata/images/hotel/max500/169886608.jpg?k=f8396e64e9d8d93926fa1713c63cfc8935c6e737c3beb190a60e7f601656638b&amp;o=&quot;,&quot;${scheme}://q-xx.bstatic.com/xdata/images/hotel/max500/169886629.jpg?k=13fd35206368e5ad4011fa5285247265ac8cce98eac328dbbf6f31dc2a8558ba&amp;o=&quot;,&quot;${scheme}://q-xx.bstatic.com/xdata/images/hotel/max500/169886630.jpg?k=d86c6ad6c5202c2f3859e20fe5d9c034854f1421eb925f41440507ab11570ca0&amp;o=&quot;,&quot;${scheme}://q-xx.bstatic.com/xdata/images/hotel/max500/169886635.jpg?k=5c41960afc14179b55733637f6966dd5dd72a8ad4373582d635d817a0e75a1e5&amp;o=&quot;,&quot;${scheme}://q-xx.bstatic.com/xdata/images/hotel/max500/169886646.jpg?k=f2b9f2c0f4b31ad61fa5b034f587a51c660b0e06e4b897d45e84a2142b74ecd9&amp;o=&quot;,&quot;${scheme}://q-xx.bstatic.com/xdata/images/hotel/max500/169886648.jpg?k=403056537e342611cf9956278a60407f27c80d682d7c3546329ecf0fdd1a47af&amp;o=&quot;,&quot;${scheme}://q-xx.bstatic.com/xdata/images/hotel/max500/169886651.jpg?k=8f1f03a7b36e455cf75e400fc8413533c30d4a352bbeec2093c41fe671bb8c47&amp;o=&quot;,&quot;${scheme}://q-xx.bstatic.com/xdata/images/hotel/max500/169886658.jpg?k=4968eabd0ecd6f94a816626f678ab4eecb802c641f37796ca33f55be225c928c&amp;o=&quot;,&quot;${scheme}://q-xx.bstatic.com/xdata/images/hotel/max500/169886689.jpg?k=5fa8b2232a92f98252684f9c4723ea6b4bfd4abf81cbfab90114be0d2ba65513&amp;o=&quot;,&quot;${scheme}://q-xx.bstatic.com/xdata/images/hotel/max500/169886691.jpg?k=cc7981d06b0d4e3f02abaadaba2e8219573bf674ccd31323054ef3a63af1de98&amp;o=&quot;,&quot;${scheme}://q-xx.bstatic.com/xdata/images/hotel/max500/169886700.jpg?k=4a309315b7bb878dbc43b30b2e976cefcee8444c46cdcaf02d19a9d565fee952&amp;o=&quot;,&quot;${scheme}://q-xx.bstatic.com/xdata/images/hotel/max500/169886716.jpg?k=01e49f7bc7b3554d9ec9d59dba80af2c964a55872a8e4f7e8d9dff3c48424763&amp;o=&quot;,&quot;${scheme}://q-xx.bstatic.com/xdata/images/hotel/max500/169886722.jpg?k=e0e8c3a36b0b86d7f8c71265174bfcd894ad0ae19d1f19b656ea2754e3813a36&amp;o=&quot;,&quot;${scheme}://q-xx.bstatic.com/xdata/images/hotel/max500/169886724.jpg?k=c3354c1e4eb3c496977db24ac96ff864d62a4de36bbb7450f70c7f5a792933c4&amp;o=&quot;,&quot;${scheme}://q-xx.bstatic.com/xdata/images/hotel/max500/169886884.jpg?k=75397718f1946b6ffedaa43afa7650901df7c4666e873d18300a665b688b9139&amp;o=&quot;,&quot;${scheme}://q-xx.bstatic.com/xdata/images/hotel/max500/169886899.jpg?k=d105346169f523834a1b64a6529ecaf2a040c8cb895335f1869797cff788e965&amp;o=&quot;,&quot;${scheme}://q-xx.bstatic.com/xdata/images/hotel/max500/169886928.jpg?k=0175e19e4b144615c89ff3dcb2f9e494371e3d1584377e6710378e0017a4688f&amp;o=&quot;,&quot;${scheme}://q-xx.bstatic.com/xdata/images/hotel/max500/169886933.jpg?k=a3fc44db66a0b9b7366830223d388e0240070f83ea99a3a7a4067c352d84c2e0&amp;o=&quot;,&quot;${scheme}://q-xx.bstatic.com/xdata/images/hotel/max500/169886953.jpg?k=432b93cf82f68c047c8fd071f1a4ff1a53a8c3d26d7b0ec9312f1d5933647fd8&amp;o=&quot;,&quot;${scheme}://q-xx.bstatic.com/xdata/images/hotel/max500/169886965.jpg?k=9aff793f7fce199a4f2e50065bcc71c00fc1510e2614b7fd0fd8a87b0d5714ee&amp;o=&quot;,&quot;${scheme}://q-xx.bstatic.com/xdata/images/hotel/max500/169886983.jpg?k=b083fa97b9ee2b68f8137b5616083a8fc2437d1670718bd3170387d22d7fca4f&amp;o=&quot;,&quot;${scheme}://q-xx.bstatic.com/xdata/images/hotel/max500/169886999.jpg?k=35b08d23936fd05bf23d434646cc7edc6a7cc1fd89a7717c8741f5bc9ca602fa&amp;o=&quot;,&quot;${scheme}://q-xx.bstatic.com/xdata/images/hotel/max500/169887045.jpg?k=49a8b9675c464821c87109d6df19c582a3afadeabfc4dfe61e929ad29080b279&amp;o=&quot;,&quot;${scheme}://q-xx.bstatic.com/xdata/images/hotel/max500/169887063.jpg?k=8f730e3c635f3169f11ec62974048b60459cfd7c404f3659e574125b707b8191&amp;o=&quot;,&quot;${scheme}://q-xx.bstatic.com/xdata/images/hotel/max500/169887148.jpg?k=9ab60b0dbfa609e100f68e87132e70bee05d74821d377503a24f11bc61481bff&amp;o=&quot;,&quot;${scheme}://q-xx.bstatic.com/xdata/images/hotel/max500/169887160.jpg?k=098031a8ffcb6c906ca17cefdf4c691df0109444bf3153d292ebf287ab366e07&amp;o=&quot;,&quot;${scheme}://q-xx.bstatic.com/xdata/images/hotel/max500/169887162.jpg?k=988b89b77fba89bd9b3fee5ca4184de872ab61ddd7520d99626b531bd268467c&amp;o=&quot;,&quot;${scheme}://q-xx.bstatic.com/xdata/images/hotel/max500/169887316.jpg?k=d680617558489a0e79b228b5507eadc435f986cdbfb7e4de68011fb0a2863000&amp;o=&quot;,&quot;${scheme}://q-xx.bstatic.com/xdata/images/hotel/max500/169887380.jpg?k=014bd4d32c648276b54c8aa0982ebdc77e88a89389e499662fcd9410023c4dcf&amp;o=&quot;,&quot;${scheme}://q-xx.bstatic.com/xdata/images/hotel/max500/169887381.jpg?k=b42d74a6d5a9d656adc74e5cc2f89a2bc0f8bb2b2a57fb7c5be65ca2710aada8&amp;o=&quot;,&quot;${scheme}://q-xx.bstatic.com/xdata/images/hotel/max500/169887383.jpg?k=645722e1779fe94fb55ff556bc2cf37410dd5a0c7f067af69b89d64a4a9a4aeb&amp;o=&quot;,&quot;${scheme}://q-xx.bstatic.com/xdata/images/hotel/max500/169887415.jpg?k=dd0679fc08a06c86ffd2c02f7d232feecc6ab853fb1b04594b42aa4d3f0f2f84&amp;o=&quot;,&quot;${scheme}://q-xx.bstatic.com/xdata/images/hotel/max500/169887450.jpg?k=d63852a6cedcc1a01e54e26e4b87ff8ac0f326c665fd9f0c8b599d363841746c&amp;o=&quot;]}},&quot;amenity_data&quot;:{&quot;amenity&quot;:[{&quot;id&quot;:&quot;6&quot;,&quot;name&quot;:&quot;Free Internet Available&quot;},{&quot;id&quot;:&quot;8&quot;,&quot;name&quot;:&quot;Free Internet In Public Areas&quot;},{&quot;id&quot;:&quot;10&quot;,&quot;name&quot;:&quot;Free Parking&quot;},{&quot;id&quot;:&quot;12&quot;,&quot;name&quot;:&quot;No Smoking Rooms/Facilities&quot;},{&quot;id&quot;:&quot;14&quot;,&quot;name&quot;:&quot;Restaurant&quot;},{&quot;id&quot;:&quot;24&quot;,&quot;name&quot;:&quot;Parking&quot;},{&quot;id&quot;:&quot;38&quot;,&quot;name&quot;:&quot;Air Conditioning&quot;},{&quot;id&quot;:&quot;47&quot;,&quot;name&quot;:&quot;24-Hour Front Desk&quot;},{&quot;id&quot;:&quot;65&quot;,&quot;name&quot;:&quot;Family room&quot;},{&quot;id&quot;:&quot;71&quot;,&quot;name&quot;:&quot;Internet services&quot;},{&quot;id&quot;:&quot;78&quot;,&quot;name&quot;:&quot;ATM/cash machine on site&quot;},{&quot;id&quot;:&quot;113&quot;,&quot;name&quot;:&quot;Heating&quot;},{&quot;id&quot;:&quot;114&quot;,&quot;name&quot;:&quot;Fax/photocopying&quot;},{&quot;id&quot;:&quot;121&quot;,&quot;name&quot;:&quot;WiFi&quot;},{&quot;id&quot;:&quot;165&quot;,&quot;name&quot;:&quot;On-site parking&quot;},{&quot;id&quot;:&quot;168&quot;,&quot;name&quot;:&quot;WiFi everywhere&quot;},{&quot;id&quot;:&quot;1240&quot;,&quot;name&quot;:&quot;WiFi available in all areas&quot;}]},&quot;marketing&quot;:{&quot;rooms_remaining&quot;:&quot;&quot;,&quot;selling_out&quot;:&quot;false&quot;,&quot;lowest_rate&quot;:&quot;true&quot;},&quot;plugin_data&quot;:{&quot;aaa&quot;:{&quot;plugin_id&quot;:null,&quot;hotelid_aaa&quot;:null,&quot;hotelid_ppn&quot;:null,&quot;is_available&quot;:null,&quot;diamond_rating&quot;:null,&quot;is_red_diamond&quot;:null,&quot;is_featured&quot;:null,&quot;is_preferred&quot;:null,&quot;featured_city_id&quot;:null,&quot;preferred_brand_id&quot;:null,&quot;preferred_brand_name&quot;:null,&quot;member_benefit_logo&quot;:null,&quot;member_benefit_text&quot;:null,&quot;plugin_name&quot;:null},&quot;pet_friendly&quot;:null,&quot;green&quot;:null},&quot;is_cancellable&quot;:&quot;1&quot;},&quot;important_information&quot;:{&quot;items&quot;:[&quot;paragraph_block&quot;,&quot;Important Information&quot;,&quot;Cancellation Policy&quot;,&quot;Any cancellation received within 1 day prior to the arrival date will incur the first night&apos;s charge. Failure to arrive at your hotel or property will be treated as a No-Show and will incur the first night&apos;s charge (Hotel policy).&quot;,&quot;Travel Insurance (Trip Protection)&quot;,&quot;You will receive a letter of Confirmation and Certificate of Insurance/Policy via separate e-mail.#br##br#For more Information, Please visit &lt;a href=&apos;${scheme}://www.allianztravelinsurance.com/faq.htm&apos; target=&apos;_blank&apos;&gt;FAQ&apos;s&lt;/a&gt;. Or, to manage your policy online, &lt;a href=&apos;${scheme}://www.allianztravelinsurance.com/account/policies/home&apos; target=&apos;_blank&apos;&gt;click here&lt;/a&gt;. If you prefer, you may also directly contact Allianz Global Assistance&apos;s &lt;a href=&apos;${scheme}://www.allianztravelinsurance.com/contact-us.htm&apos; target=&apos;_blank&apos;&gt;Customer Support Team&lt;/a&gt; or call at 1-888-799-3063.#br##br#If you cancel your reservation, please call Allianz Global Assistance at 1-888-799-3063 to request a travel insurance refund or report a claim if cancelling for a covered reason.&quot;,&quot;Photo Policy&quot;,&quot;The reservation holder must present a valid photo ID and credit card at check-in. The credit card is required for any additional hotel specific service fees or incidental charges or fees that may be charged by the hotel to the customer at checkout. These #START_PHOTO#charges#END_PHOTO# may be mandatory (e.g., resort fees) or optional (parking, phone calls or minibar charges) and are not included in the room rate.&quot;,&quot;Rate Description&quot;,&quot;Special Rate&quot;,&quot;Room Charge Disclosure&quot;,&quot;Your credit card is charged the total cost at time of purchase. Prices and room availability are not guaranteed until full payment is received.&quot;,&quot;Hotel Loyalty Rewards Card&quot;,&quot;Please present your card at the time of check-in.&quot;],&quot;itemsElementName&quot;:[1,0,3,2,3,2,3,2,3,2,3,2,3,2]},&quot;taxes_and_fees_policy&quot;:{&quot;policy_data&quot;:null},&quot;tracking_id&quot;:&quot;5da8d2982b3a7&quot;,&quot;plugin_information&quot;:&quot;&quot;,&quot;book_form_details&quot;:{&quot;newsletter&quot;:&quot;1&quot;},&quot;upsell_data&quot;:{&quot;travel_insurance&quot;:{&quot;default&quot;:&quot;&quot;,&quot;important_information&quot;:&quot;&quot;,&quot;ti_html&quot;:&quot;&quot;,&quot;insurance_type&quot;:&quot;none&quot;,&quot;insurance_available&quot;:&quot;0&quot;,&quot;extra_information&quot;:null}}},&quot;MarkupPrice&quot;:&quot;181.09&quot;,&quot;CheckInDate&quot;:&quot;${check_in}&quot;,&quot;CheckOutDate&quot;:&quot;${check_out}&quot;,&quot;ClientIP&quot;:&quot;&quot;,&quot;CreatedTime&quot;:&quot;&quot;,&quot;CreatedBy&quot;:&quot;SrinivasMajiga&quot;,&quot;Price&quot;:&quot;458.35&quot;,&quot;UnitCurrency&quot;:&quot;USD&quot;,&quot;UnitCostValue&quot;:237,&quot;UnitPriceValue&quot;:&quot;418.09&quot;,&quot;Taxes&quot;:40.26,&quot;StateCode&quot;:&quot;NJ&quot;,&quot;IsCustomInventory&quot;:false,&quot;FeedProvider&quot;:&quot;priceline&quot;,&quot;EntityId&quot;:${hotelId},&quot;UnitId&quot;:0,&quot;PpnContractBundle&quot;:&quot;${ppn_bundle}&quot;,&quot;GuestDetails&quot;:[{&quot;GuestId&quot;:1,&quot;FirstName&quot;:&quot;John&quot;,&quot;MiddleName&quot;:&quot;&quot;,&quot;LastName&quot;:&quot;Wilson&quot;}],&quot;PropertyFee&quot;:&quot;0&quot;,&quot;SupplierMarkup&quot;:&quot;0.00&quot;,&quot;PartnerMarkup&quot;:&quot;42.66&quot;,&quot;PercentageBelowRetailMarkup&quot;:&quot;41.95&quot;,&quot;ClientMarkup&quot;:&quot;96.48&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">www.purchasingpower.travel</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/Api/api/Hotels/AddToTravelCart</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://www.purchasingpower.travel/app/HotelRoom</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:69.0) Gecko/20100101 Firefox/69.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">3000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="498 /Views/CartList.html" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">www.purchasingpower.travel</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/Views/CartList.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://www.purchasingpower.travel/app/HotelRoom</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:69.0) Gecko/20100101 Firefox/69.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="514 /Api/api/Cart/GetCartItemList" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="CallForCart" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">CallForCart</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="userId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">userId</stringProp>
                  <stringProp name="Argument.value">${userid}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">www.purchasingpower.travel</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/Api/api/Cart/GetCartItemList</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://www.purchasingpower.travel/app/CartList</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:69.0) Gecko/20100101 Firefox/69.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="cartId" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">cartId</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;cartId&quot;:(\d+)</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="513 /Api/api/Cart/GetCartItemList" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="CallForCart" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">CallForCart</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="reservationid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">reservationid</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="userId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">userId</stringProp>
                  <stringProp name="Argument.value">${userid}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">www.purchasingpower.travel</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/Api/api/Cart/GetCartItemList</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://www.purchasingpower.travel/app/HotelRoom</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:69.0) Gecko/20100101 Firefox/69.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1367589797">cartId</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="07-RemoveFromCart" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="517 /Api/api/Cart/RemoveCartItem" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="cartId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cartId</stringProp>
                  <stringProp name="Argument.value">${cartId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">www.purchasingpower.travel</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/Api/api/Cart/RemoveCartItem</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://www.purchasingpower.travel/app/CartList</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:69.0) Gecko/20100101 Firefox/69.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">3000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="519 /Api/api/Cart/GetCartItemList" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="CallForCart" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">CallForCart</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="reservationid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">reservationid</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="userId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">userId</stringProp>
                  <stringProp name="Argument.value">${userid}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">www.purchasingpower.travel</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/Api/api/Cart/GetCartItemList</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://www.purchasingpower.travel/app/CartList</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:69.0) Gecko/20100101 Firefox/69.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
